package pages

import (
	"github.com/ArkLabsHQ/fulmine/internal/interface/web/templates/components"
)

templ addressLine(title, value string) {
	<div class="flex justify-between items-center w-80">
	  <div>
	    <p class="text-white/50">{title}</p>
	    <p class="overflow-hidden truncate text-white w-64">{value}</p>
		</div>
		@components.CopyButton(value)
	</div>
}

templ ReceiveEditContent() {
	<div id="receiveBody">
	  @components.DesktopHeader()
	  <form hx-post="/receive/preview" hx-target="#receiveBody" hx-swap="outerHTML">
	    <div class="p-3 flex flex-col justify-between rounded-lg h-screen md:h-auto md:bg-desktopbg">
	      <div>
	        @components.Header("Receive")
	        @components.ReceiveAmount()
	    	</div>
	    	@components.ActionButtons("Confirm", true)
	    </div>
	  </form>
	</div>
	<script>
	  document.querySelector('#amount').addEventListener('input', () => {
			const amount = document.querySelector('#amount').value
			const button = document.querySelector('button[type="submit"]')
			button.disabled = !amount || !amount > 0
		})
	</script>
}

templ ReceiveQrCodeContent(bip21, offchainAddr, boardingAddr, encoded, sats string) {
	<div id="receiveContent" data-address={offchainAddr}>
	  @components.DesktopHeader()
	  <div class="p-3 flex flex-col justify-between rounded-lg h-screen md:h-auto md:bg-desktopbg">
	    @components.Header("Receive")
      <div class="flex flex-col justify-center items-center gap-2 overflow-auto">
	  	  <div class="h-64 mb-8">
          <img src={"data:image/png;base64," + encoded} alt="qrcode for receive address" title={bip21}>
	  		</div>
				@addressLine("BIP 21", bip21)
				@addressLine("BTC address", boardingAddr)
				@addressLine("Ark address", offchainAddr)
	  	</div>
      <div class="flex flex-col md:flex-row justify-start gap-4 mt-10 mb-2">
	      <a class="button md:w-auto" onclick="redirect('/receive/edit')">
	  		  @components.EditIcon()
	  			<span class="ml-2">Edit</span>
	  		</a>
	    </div>
	  </div>
	</div>
	<script>
	// Make a single check for received funds
	const address = document.getElementById('receiveContent').dataset.address;
	fetch(`/receive/watch?address=${encodeURIComponent(address)}`)
		.then(response => response.json())
		.then(data => {
			if (data.sats && data.sats > 0) {
				window.location.href = `/receive/success?sats=${encodeURIComponent(data.sats)}&address=${encodeURIComponent(data.address)}`;
			}
		})
		.catch(error => {
			console.error("Error checking for funds:", error);
		});
	</script>
}

templ ReceiveSuccessContent(offchainAddr, sats string) {
	<div id="receiveContent">
	  @components.DesktopHeader()
	  <div class="p-3 flex flex-col justify-between rounded-lg h-screen md:h-auto md:bg-desktopbg">
	    <div class="flex flex-col items-center">
		    @components.Header("Receive")
	      @SuccessIcon()
			  <p class="mt-8">Received successfully</p>
			  <p class="mt-8 text-3xl cryptoAmount" sats={sats}>{sats} SATS</p>
			  <div class="flex mt-8 w-64 gap-2">
			    <p class="text-white/50">to</p>
				  <p class="overflow-hidden text-ellipsis whitespace-nowrap" id="recvAddress">{offchainAddr}</p>
				  @components.CopyWidget(offchainAddr)
			  </div>
		  </div>
	  </div>
	</div>
}