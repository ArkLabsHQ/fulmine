package pages

import (
	"github.com/ArkLabsHQ/ark-wallet/templates/components"
)

func HistoryIcon(kind string) templ.Component {
	 switch kind {
    case "received":
        return ReceivedIcon()
    case "sent":
        return SentIcon()
    case "swap":
        return SwapIcon()
    case "waiting":
        return WaitingIcon()
    default:
        return SwapIcon()
    }
}

templ SentIcon() {
	<div class="flex items-center w-8 h-8 bg-redbg/10 rounded-full mr-2">
	  <svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4 mx-auto text-red" viewBox="0 0 24 24">
      <g fill="none" stroke="currentColor" stroke-linecap="round" stroke-width="2">
        <path stroke-miterlimit="10" d="M17.657 6.343L6.343 17.657"/>
        <path stroke-linejoin="round" d="M18.101 16.733V7.437A1.53 1.53 0 0 0 16.563 5.9H7.267"/>
      </g>
    </svg>
	</div>
}

templ SwapIcon() {
	<div class="flex items-center w-8 h-8 bg-offwhite/10 rounded-full mr-2">
	  <svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4 mx-auto text-offwhite" viewBox="0 0 21 21">
      <g fill="none" fill-rule="evenodd" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2">
        <path d="M13 8h5V3"/>
        <path d="M18 8c-2.837-3.333-5.67-5-8.5-5S4.17 4 2 6m4.5 5.5h-5v5"/>
        <path d="M1.5 11.5c2.837 3.333 5.67 5 8.5 5s5.33-1 7.5-3"/>
      </g>
    </svg>
	</div>
}

templ ReceivedIcon() {
	<div class="flex items-center w-8 h-8 bg-greenbg/10 rounded-full mr-2">
	  <svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4 mx-auto text-green" viewBox="0 0 24 24">
      <g fill="none" stroke="currentColor" stroke-linecap="round" stroke-width="2">
        <path stroke-miterlimit="10" d="M6.343 17.657L17.657 6.343"/>
        <path stroke-linejoin="round" d="M5.899 7.267v9.296A1.53 1.53 0 0 0 7.437 18.1h9.296"/>
      </g>
    </svg>
	</div>
}

templ WaitingIcon() {
	<div class="flex items-center w-8 h-8 bg-yellowbg/10 rounded-full mr-2">
	  <svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4 mx-auto text-yellow" viewBox="0 0 24 24">
      <path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12 3v3m6.366-.366l-2.12 2.12M21 12h-3m.366 6.366l-2.12-2.12M12 21v-3m-6.366.366l2.12-2.12M3 12h3m-.366-6.366l2.12 2.12"/>
    </svg>
	</div>
}

templ HistoryLine(txid, kind, date, hour, sats string) {
	<div txid={txid} onclick="showTx(this)">
	  <div class="flex justify-between cursor-pointer p-3 rounded hover:bg-offwhite/10" >
	  	<div class="flex">
	  	  @HistoryIcon(kind)
	  	  <p class="leading-4">{date}<br /><span class="text-offwhite/50">{hour}</span></p>
	  	</div>
	  	<div>
	  	  <p class="leading-4 text-end">
	  		  <span class={
						templ.KV("text-red", kind == "sent"),
						templ.KV("text-green", kind == "received"),
						templ.KV("text-yellow", kind == "waiting")
					}>
	  			  <span class="btcm">{sats}</span> BTC
	  			</span>
	  			<br />
	  		  <span class="text-offwhite/50 usd" sats={sats}>$ ...</span>
	  		</p>
	  	</div>
	  </div>
	</div>
}

// BodyContent defines HTML content.
templ HistoryBodyContent(currentBalance, arkAddress string, transactions [][]string) {
	@components.Hero(arkAddress, currentBalance)
	for _, tx := range transactions {
		@HistoryLine(tx[0], tx[1], tx[2], tx[3], tx[4])
	}
	<script>
	  const showTx = (el) => {
			const txid = el.getAttribute("txid")
			if (txid) redirect(`/tx/${txid}`)
		}
	</script>
}
