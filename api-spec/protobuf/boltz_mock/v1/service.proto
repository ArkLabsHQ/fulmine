syntax = "proto3";

package boltz_mock.v1;

service Service {
  // ark --> ln
  rpc SubmarineSwap(SubmarineSwapRequest) returns (SubmarineSwapResponse) {};
  // ln --> ark
  rpc ReverseSubmarineSwap(ReverseSubmarineSwapRequest) returns (ReverseSubmarineSwapResponse) {};
}

message SubmarineSwapRequest {
  string from = 1;
  string to = 2;
  string invoice = 3;
  string preimage_hash = 4;
  string refund_public_key = 5; // not needed ?
  uint64 invoice_amount = 6; // not needed ?
}

message SubmarineSwapResponse {
  string address = 1; // include claim pubkey
  uint64 expected_amount = 2;
  bool accept_zero_conf = 3;
  string descriptor = 4;
}

message ReverseSubmarineSwapRequest {
  string from = 1;
  string to = 2;
  uint64 invoice_amount = 3;
  uint64 onchain_amount = 4;
  string address = 5;
  string descriptor = 6;
}

message ReverseSubmarineSwapResponse {
  string invoice = 1;
  string lockup_address = 2;
  string refund_public_key = 3;
  string preimage_hash = 4;
}
